name: lvs

on:
  push:
  workflow_dispatch:

jobs:
  lvs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up environment variables
        shell: bash
        run: |
          cat << EOF >> $GITHUB_ENV
          PDK_ROOT=/home/runner/pdk
          PDK=sky130A
          MAGIC_VERSION=master
          NETGEN_VERSION=master
          TOP_MODULE=$(yq '.project.top_module' info.yaml)
          EOF

      - name: Install Sky130 PDK
        uses: TinyTapeout/volare-action@v1
        with:
          pdk_name: sky130
          pdk_version: 78b7bc32ddb4b6f14f76883c2e2dc5b5de9d1cbc
          pdk_root: /home/runner/pdk

      - name: Install Magic
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y m4 python3 libx11-dev tcl-dev tk-dev libcairo2-dev mesa-common-dev libglu1-mesa-dev
          git clone -b $MAGIC_VERSION https://github.com/RTimothyEdwards/magic /tmp/magic
          cd /tmp/magic
          ./configure
          make -j$(nproc)
          sudo make install

      - name: Install Netgen
        shell: bash
        run: |
          git clone -b $NETGEN_VERSION https://github.com/RTimothyEdwards/netgen /tmp/netgen
          cd /tmp/netgen
          ./configure
          make -j$(nproc)
          sudo make install

      - name: Extract SPICE from Layout using Magic
        shell: bash
        run: |
          cd mag
          magic -dnull -noconsole << EOF
          load ${TOP_MODULE}
          extract all
          ext2spice lvs
          quit
          EOF

      - name: Run LVS with Netgen
        shell: bash
        run: |
          cd mag
          netgen -batch lvs \
            "${TOP_MODULE}.spice ${TOP_MODULE}" \
            "../src/${TOP_MODULE}.v ${TOP_MODULE}" \
            $PDK_ROOT/$PDK/libs.tech/netgen/sky130A_setup.tcl \
            lvs.report

      - name: Check LVS Report
        shell: bash
        run: |
          cd mag
          if grep -q "Final result: Circuits match uniquely" lvs.report; then
            echo "LVS PASSED"
          else
            echo "LVS FAILED"
            cat lvs.report
            exit 1
          fi
